trigger:
  - master
  - tags

stages:
- stage: Render
  displayName: Render
  jobs:
  - job: render_on_windows
    displayName: Render on Windows
    pool:
      vmImage: windows-latest
    workspace:
      clean: all
    strategy:
      parallel: 5
    variables:
      totalFrames: 50
    steps:
    - bash: |
          curl -o blender.zip -L https://ftp.nluug.nl/pub/graphics/blender/release/Blender2.82/blender-2.82-windows64.zip
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: blender.zip
        destinationFolder: blender
    - task: BatchScript@1
      inputs:
        filename: render.cmd
      displayName: Render
    - task: PublishBuildArtifacts@1
      displayName: upload render output
      inputs:
        artifactName: 'render_windows'
        pathtoPublish: $(Build.ArtifactStagingDirectory)
  - job: render_on_linux
    displayName: Render on Linux
    pool:
      vmImage: ubuntu-18.04
    workspace:
      clean: all
    strategy:
      parallel: 5 #
    variables:
      totalFrames: 50
    steps:
    - script: |
        sudo apt update
        sudo apt install snapd mesa-utils
      displayName: Install Dependencies
    #- bash: |
    #    sudo add-apt-repository ppa:ubuntu-x-swat/updates
    #    sudo ACCEPT_EULA=Y apt-get dist-upgrade
    #    glxinfo | grep "OpenGL version"
    #  displayName: Install mesa
    - script: |
        sudo snap install blender --classic
    - bash: |
        frames=$(($(totalFrames) / $(System.TotalJobsInPhase)))
        offset=$((($(System.JobPositionInPhase) - 1) * ${frames}))
        if [ $(System.JobPositionInPhase) -eq $(System.TotalJobsInPhase) ]
        then
          frameend=$(((${offset}+$frames)))
        else
          frameend=$(((${offset}+$frames)-1))
        fi
        echo "rendering from ${offset} to ${frameend} total jobs $(System.TotalJobsInPhase) job id $(System.JobPositionInPhase)"
        echo "blender -b test.blend -noaudio -E CYCLES -x 1 -F PNG -o $(Build.ArtifactStagingDirectory)/frame_#### -s ${offset} -e ${frameend} -a"
        blender -b test.blend -noaudio -S Scene -E CYCLES -x 1 -F PNG -o $(Build.ArtifactStagingDirectory)/frame_#### -s ${offset} -e ${frameend} -a 
      displayName: Render
    - task: PublishBuildArtifacts@1
      displayName: upload render output
      inputs:
        artifactName: 'render'
        pathtoPublish: $(Build.ArtifactStagingDirectory)
  - job: generate_movie
    displayName: Generate Movie
    dependsOn:
    - render_on_linux
    steps:
    - script: |
        sudo apt update
        sudo apt install snapd mesa-utils
      displayName: Install Dependencies
    - script: |
        sudo snap install blender --classic
    - task: DownloadBuildArtifacts@0
      displayName: download render output
      inputs:
        artifactName: render
        downloadPath: $(Build.ArtifactStagingDirectory)
    - bash: |
        blender -b test.blend -noaudio -S Movie -x 1 -o $(Build.ArtifactStagingDirectory)/final -a
      displayName: Composite
    - task: PublishBuildArtifacts@1
      displayName: upload final output
      inputs:
        artifactName: 'final'
        pathtoPublish: $(Build.ArtifactStagingDirectory)
